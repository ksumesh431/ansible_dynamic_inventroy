# roles/tomcat_deployment/tasks/main.yml
---
- name: Define host paths for Tomcat volumes
  ansible.builtin.set_fact:
    tomcat_volume_paths:
      - /opt/teams/share/pd/logs
      - /opt/teams/share/environments/pd
      - /opt/teams/share/environments/pd/jasper
      - /opt/glowroot

- name: Ensure Tomcat volume host directories exist on all Swarm nodes
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop: "{{ tomcat_volume_paths }}"

- name: Ensure Glowroot properties file exists on all Swarm nodes
  become: true
  ansible.builtin.template:
    src: glowroot.properties.j2
    dest: /opt/glowroot/glowroot.properties
    mode: '0644'

# *** NEW TASK: Render the Docker Compose template ***
- name: Render Tomcat stack compose file from template
  ansible.builtin.template:
    src: tomcat-stack.yml.j2
    dest: "/tmp/tomcat-stack-{{ inventory_hostname_short }}.yml" # Temporary file on control node
  delegate_to: localhost # Render the template on the Ansible control node
  run_once: true # Only need to render it once
  register: rendered_compose_file
  # Ensure variables are available for templating
  # This might not be strictly necessary if using group_vars correctly,
  # but good for clarity if vars are defined elsewhere.
  # vars:
  #   tomcat_schedule_manager: "{{ tomcat_schedule_manager }}"
  #   tomcat_tz: "{{ tomcat_tz }}"
  #   # ... and so on for all variables used in the template

- name: DEBUG - Python interpreter on master for docker_stack
  become: true
  ansible.builtin.shell: "which python3.9 && echo '---' && {{ ansible_python_interpreter | default('/usr/bin/python3.9') }} -c 'import sys; print(sys.executable); print(sys.path); import jsondiff; print(jsondiff.__file__)'"
  register: python_debug_master
  delegate_to: "{{ groups['swarm_master'][0] }}"
  run_once: true
  when: groups['swarm_master'] is defined and groups['swarm_master'] | length > 0
  changed_when: false # This is a debug task, shouldn't report changes
  failed_when: false  # We want to see the output even if parts of the shell command fail


- name: DEBUG - Show Python debug info from master
  ansible.builtin.debug:
    var: python_debug_master.stdout_lines
  when: python_debug_master is defined
  run_once: true # Matches the run_once of the command

- name: DEBUG - Check if jsondiff is importable by the interpreter on master
  become: true
  ansible.builtin.command: "{{ ansible_python_interpreter | default('/usr/bin/python3.9') }} -c 'import jsondiff; print(jsondiff.__file__)'"
  register: jsondiff_import_test_master
  failed_when: false # We want to see the output even if it fails
  delegate_to: "{{ groups['swarm_master'][0] }}"
  run_once: true
  when: groups['swarm_master'] is defined and groups['swarm_master'] | length > 0

- name: DEBUG - Show jsondiff import test result from master
  ansible.builtin.debug:
    var: jsondiff_import_test_master
  when: jsondiff_import_test_master is defined
  run_once: true

- name: Deploy Tomcat stack to Swarm
  become: true
  community.docker.docker_stack:
    state: present
    name: tomcat_stack
    # *** MODIFIED: Use the content of the rendered template ***
    compose:
      - "{{ lookup('file', rendered_compose_file.dest) }}" # Read content from the temp file
    with_registry_auth: true
    prune: true
  delegate_to: "{{ groups['swarm_master'][0] }}"
  run_once: true
  when: groups['swarm_master'] is defined and groups['swarm_master'] | length > 0

# *** NEW TASK: Clean up the temporary compose file ***
- name: Clean up temporary rendered compose file
  ansible.builtin.file:
    path: "{{ rendered_compose_file.dest }}"
    state: absent
  delegate_to: localhost
  run_once: true
  when: rendered_compose_file.dest is defined

- name: Verify Tomcat stack services
  become: true
  ansible.builtin.command: docker stack ps tomcat_stack
  register: stack_ps_output
  changed_when: false
  delegate_to: "{{ groups['swarm_master'][0] }}"
  run_once: true
  when: groups['swarm_master'] is defined and groups['swarm_master'] | length > 0

- name: Display Tomcat stack status
  ansible.builtin.debug:
    var: stack_ps_output.stdout_lines
  when: stack_ps_output is defined and stack_ps_output.stdout_lines is defined
  delegate_to: "{{ groups['swarm_master'][0] }}"
  run_once: true
