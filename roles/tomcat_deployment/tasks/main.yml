# roles/tomcat_deployment/tasks/main.yml
---
- name: Define host paths for Tomcat volumes
  ansible.builtin.set_fact:
    tomcat_volume_paths:
      - /opt/teams/share/pd/logs
      - /opt/teams/share/environments/pd
      - /opt/teams/share/environments/pd/jasper
      - /opt/glowroot

- name: Ensure Tomcat volume host directories exist on all Swarm nodes
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop: "{{ tomcat_volume_paths }}"

- name: Ensure Glowroot properties file exists on all Swarm nodes
  become: true
  ansible.builtin.template:
    src: glowroot.properties.j2
    dest: /opt/glowroot/glowroot.properties
    mode: '0644'

# --- Template Rendering and Deployment ---

- name: Render Tomcat stack compose file locally
  ansible.builtin.template:
    src: tomcat-stack.yml.j2
    dest: "/tmp/tomcat-stack-rendered-{{ inventory_hostname_short }}.yml" # Temp file on control node
  delegate_to: localhost
  run_once: true # Only need one rendered file
  register: rendered_compose_local
  check_mode: no # Ensure this runs even in check mode to get the path

- name: Define temporary path on master node
  ansible.builtin.set_fact:
    # Create a unique-ish temporary path on the remote master
    remote_compose_path: "/tmp/tomcat-stack-remote-{{ ansible_date_time.epoch }}.yml"
  run_once: true # Only need one path name

- name: Copy rendered compose file to Swarm master
  become: true # May need sudo to write to /tmp on master
  ansible.builtin.copy:
    src: "{{ rendered_compose_local.dest }}" # Path on control node
    dest: "{{ remote_compose_path }}"        # Path on master node
    mode: '0644'
  delegate_to: "{{ groups['swarm_master'][0] }}"
  run_once: true # Copy it once to the master
  when: groups['swarm_master'] is defined and groups['swarm_master'] | length > 0

- name: Deploy Tomcat stack to Swarm using file on master
  become: true
  community.docker.docker_stack:
    state: present
    name: tomcat_stack
    compose:
      - "{{ remote_compose_path }}" # *** CORRECTED: Use path ON THE MASTER ***
    with_registry_auth: true
    prune: true
  delegate_to: "{{ groups['swarm_master'][0] }}"
  run_once: true
  when: groups['swarm_master'] is defined and groups['swarm_master'] | length > 0

- name: Clean up temporary compose file on Swarm master
  become: true
  ansible.builtin.file:
    path: "{{ remote_compose_path }}"
    state: absent
  delegate_to: "{{ groups['swarm_master'][0] }}"
  run_once: true
  when:
    - groups['swarm_master'] is defined and groups['swarm_master'] | length > 0
    - remote_compose_path is defined # Ensure variable exists

- name: Clean up temporary rendered compose file on control node
  ansible.builtin.file:
    path: "{{ rendered_compose_local.dest }}"
    state: absent
  delegate_to: localhost
  run_once: true
  when: rendered_compose_local.dest is defined

- name: Verify Tomcat stack services
  become: true
  ansible.builtin.command: docker stack ps tomcat_stack
  register: stack_ps_output
  changed_when: false
  delegate_to: "{{ groups['swarm_master'][0] }}"
  run_once: true
  when: groups['swarm_master'] is defined and groups['swarm_master'] | length > 0

- name: Display Tomcat stack status
  ansible.builtin.debug:
    var: stack_ps_output.stdout_lines
  when: stack_ps_output is defined and stack_ps_output.stdout_lines is defined
  delegate_to: "{{ groups['swarm_master'][0] }}"
  run_once: true
