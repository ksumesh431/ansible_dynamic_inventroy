---
# tasks file for docker installation on Amazon Linux 2023

- name: Update all packages
  become: true
  ansible.builtin.dnf:
    name: "*"
    state: latest
    update_cache: true

- name: Remove any existing Docker repositories
  become: true
  ansible.builtin.file:
    path: /etc/yum.repos.d/docker-ce.repo
    state: absent

- name: Install Docker and dependencies from Amazon Linux repos
  become: true
  ansible.builtin.dnf:
    name:
      - docker
      - containerd
    state: present
  notify: Restart Docker Service

- name: Install Docker Compose
  become: true
  ansible.builtin.get_url:
    url: https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: "0755"

- name: Create symbolic link for docker-compose
  become: true
  ansible.builtin.file:
    src: /usr/local/bin/docker-compose
    dest: /usr/bin/docker-compose
    state: link

- name: Ensure Docker service is started and enabled
  become: true
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true

- name: Ensure docker group exists
  become: true
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to docker group
  become: true
  ansible.builtin.user:
    name: "{{ docker_group_user }}"
    groups: docker
    append: true
  notify: Reset SSH connection for group changes


############## ECR repo pull setup ################
- name: Install Amazon ECR Credential Helper
  become: true
  ansible.builtin.dnf:
    name: amazon-ecr-credential-helper
    state: present

- name: Ensure .docker directory exists for root user
  become: true
  ansible.builtin.file:
    path: /root/.docker
    state: directory
    mode: '0700' # Restrictive permissions

- name: Configure Docker to use ECR credential helper for root user
  become: true
  ansible.builtin.copy:
    content: |
      {
        "credHelpers": {
          "public.ecr.aws": "ecr-login",
          "575672604269.dkr.ecr.us-east-1.amazonaws.com": "ecr-login"
        }
      }
    dest: /root/.docker/config.json
    mode: '0600' # Restrictive permissions
  notify: Restart Docker Service # Assuming you have a handler to restart docker

############## docker ansible module dependencies ###############

# This task should run on the Swarm Master(s)
- name: Ensure pip is available on Swarm master(s) for Docker SDK dependencies
  become: true
  ansible.builtin.dnf:
    name: python3.9-pip # Adjust if your Python version differs on masters
    state: present
  when: inventory_hostname in groups['swarm_master'] # Target only masters

- name: Install required Python libraries for Docker modules on Swarm master(s)
  become: true
  ansible.builtin.pip:
    name:
      - docker # Docker SDK for Python
      - jsondiff # For docker_stack
    executable: pip3.9 # Or pip3, matching the Python Ansible uses
    state: present
  when: inventory_hostname in groups['swarm_master'] # Target only masters
