# ansible_project/playbook.yml
---
# Play 1: Install Docker, gather facts, and group hosts for Swarm
- name: Prepare Docker Hosts and Group by Swarm Role
  hosts: all # Target all hosts defined by the dynamic inventory for the chosen env
  gather_facts: true # Gather facts initially for IP addresses, etc.
  become: false # Role/tasks below will use 'become' as needed

  roles:
    # Role 1: Ensure Docker is installed and configured correctly
    - role: docker_dependencies
      vars:
        docker_group_user: "{{ ansible_user }}"

  tasks:
    # Task 1: Dynamically create 'swarm_master' and 'swarm_worker' groups
    - name: Group hosts by Swarm role based on docker_node_type
      ansible.builtin.group_by:
        # Creates groups named 'swarm_master' or 'swarm_worker' in memory
        key: "swarm_{{ 'master' if docker_node_type == 'master' else 'worker' }}"
      when: docker_node_name is defined
      changed_when: false

    # Task 2: Sanity check - ensure at least one master is defined
    - name: Fail if no master node defined
      ansible.builtin.fail:
        msg: "No node found with docker_node_type set to 'master'. Cannot initialize Swarm."
      run_once: true
      when: groups['swarm_master'] is not defined or groups['swarm_master'] | length == 0

    # Task 3: Information about multiple masters
    - name: Info about multiple master nodes
      ansible.builtin.debug:
        msg: >-
          Found {{ groups['swarm_master'] | length }} node(s) with docker_node_type 'master'.
          {{ groups['swarm_master'][0] }} will be used as the initial master for token retrieval.
      run_once: true
      when: groups['swarm_master'] is defined and groups['swarm_master'] | length > 1

    # Task 4: Set hostnames based on docker_node_name
    - name: Set hostnames based on docker_node_name
      become: true
      ansible.builtin.hostname:
        name: "{{ docker_node_name }}"
      when: docker_node_name is defined

# Play 2: Configure Docker Swarm using the dynamically created groups
- name: Configure Docker Swarm
  hosts: all # Target all hosts again so master and workers are available for role logic
  gather_facts: false # Facts were gathered in the previous play
  become: false # Role tasks use 'become: true' where needed

  roles:
    # Role 2: Initialize Swarm on masters and join workers
    - role: docker_swarm

# Play 3: Deploy Tomcat Application Stack
- name: Deploy Tomcat Application
  hosts: all # Tasks inside the role will target specific nodes or delegate
  gather_facts: false
  become: false # Role tasks use 'become' as needed

  roles:
    - role: tomcat_deployment